version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 679029767004.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_REPO=679029767004.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/pipeline-test
      - TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $IMAGE_REPO:$TAG .
      - docker push $IMAGE_REPO:$TAG
  post_build:
    commands:
      - echo "Deploying to Lambda..."
      # Check if Lambda already exists
      - |
        if aws lambda get-function --function-name kashaf-lambda > /dev/null 2>&1; then
          echo "Updating existing Lambda function..."
          aws lambda update-function-code \
            --function-name kashaf-lambda \
            --image-uri $IMAGE_REPO:$TAG
        else
          echo "Creating new Lambda function..."
          aws lambda create-function \
            --function-name kashaf-lambda \
            --package-type Image \
            --code ImageUri=$IMAGE_REPO:$TAG \
            --role arn:aws:iam::679029767004:role/lambda-execution-role
        fi
      - echo "Writing image definitions..."
      - printf '[{"name":"app-container","imageUri":"%s"}]' $IMAGE_REPO:$TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
